[{"D:\\Rahma\\Web\\splitwise-web\\src\\index.js":"1","D:\\Rahma\\Web\\splitwise-web\\src\\App.js":"2","D:\\Rahma\\Web\\splitwise-web\\src\\reportWebVitals.js":"3","D:\\Rahma\\Web\\splitwise-web\\src\\event\\event.js":"4","D:\\Rahma\\Web\\splitwise-web\\src\\expense\\expense.js":"5","D:\\Rahma\\Web\\splitwise-web\\src\\expense-condensed\\expense-condensed.js":"6","D:\\Rahma\\Web\\splitwise-web\\src\\services\\http-services.js":"7","D:\\Rahma\\Web\\splitwise-web\\src\\event-condensed\\event-condensed.js":"8","D:\\Rahma\\Web\\splitwise-web\\src\\services\\http-service-event.js":"9","D:\\Rahma\\Web\\splitwise-web\\src\\edit-expense\\edit-expense.js":"10","D:\\Rahma\\Web\\splitwise-web\\src\\edit-event\\edit-event.js":"11","D:\\Rahma\\Web\\splitwise-web\\src\\event-condensed\\event-people.js":"12"},{"size":556,"mtime":1670140272493,"results":"13","hashOfConfig":"14"},{"size":1301,"mtime":1669700845309,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1667029342058,"results":"16","hashOfConfig":"14"},{"size":3369,"mtime":1670139307593,"results":"17","hashOfConfig":"14"},{"size":10558,"mtime":1670854330740,"results":"18","hashOfConfig":"14"},{"size":3912,"mtime":1670852859260,"results":"19","hashOfConfig":"14"},{"size":567,"mtime":1669700935801,"results":"20","hashOfConfig":"14"},{"size":6523,"mtime":1670480087286,"results":"21","hashOfConfig":"14"},{"size":573,"mtime":1669700740155,"results":"22","hashOfConfig":"14"},{"size":5191,"mtime":1669887439233,"results":"23","hashOfConfig":"14"},{"size":3590,"mtime":1669887391642,"results":"24","hashOfConfig":"14"},{"size":2336,"mtime":1670849544437,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qjd953",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rahma\\Web\\splitwise-web\\src\\index.js",[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\App.js",["65","66","67","68","69"],[],"D:\\Rahma\\Web\\splitwise-web\\src\\reportWebVitals.js",[],[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\event\\event.js",["70"],[],"D:\\Rahma\\Web\\splitwise-web\\src\\expense\\expense.js",["71","72","73"],[],"import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ExpenseCondensed from '../expense-condensed/expense-condensed';\r\nimport EventCondensed from '../event-condensed/event-condensed';\r\nimport './expense.css';\r\nimport HttpService from '../services/http-services';\r\nimport HttpServiceEvent from '../services/http-service-event';\r\n\r\nconst http = new HttpService();\r\nconst httpEvent = new HttpServiceEvent();\r\n\r\nclass Expense extends Component {\r\n\r\n    constructor(props){\r\n        super(props);   \r\n        this.state = {expenses:[], events:[], num:0, costBreakdown:{}};\r\n        this.loadData = this.loadData.bind(this);\r\n        this.loadEvent = this.loadEvent.bind(this);\r\n        this.Id = this.props.data.id\r\n        this.loadEvent(this.Id);\r\n        this.loadData(this.Id);\r\n        this.doFunction = this.doFunction.bind(this);\r\n        this.printexpenses = this.printexpenses.bind(this);\r\n        this.createExpenseList = this.createExpenseList.bind(this);\r\n        this.addToCostBreakdown = this.addToCostBreakdown.bind(this);\r\n        this.calcCostBreakdown = this.calcCostBreakdown.bind(this);\r\n        this.buildCBD = this.buildCBD.bind(this);\r\n        this.costBreakdown = {};\r\n    }\r\n\r\n    loadData = (id) => {\r\n        console.log(this.props.data)\r\n        if (id.length!=0){\r\n        http.getExpenses(id).then(data => {\r\n           this.setState({expenses:data},this.buildCBD);\r\n           console.log(this.state.expenses);\r\n        }, err => {});\r\n        }\r\n        else{\r\n            console.log(\"no Id\")\r\n        }\r\n        \r\n\r\n    }\r\n    buildCBD =()=>{\r\n        var CBD = {};\r\n        for (let i = 0; i <this.state.events.people.length; i++){\r\n         var temp={}\r\n         for(let j=0; j<this.state.events.people.length; j++){\r\n             temp[this.state.events.people[j]]=0;\r\n         }            \r\n         CBD[this.state.events.people[i]]=temp;\r\n        }\r\n        this.setState({costBreakdown:CBD},this.calcCostBreakdown);\r\n        console.log(this.costBreakdown);\r\n    }\r\n\r\n    loadEvent = (id) => {\r\n        console.log(\"loading event\")\r\n        console.log(this.props.data)\r\n        if (id.length!=0){\r\n        httpEvent.getEvent(id).then(data => {\r\n           this.setState({events:data});\r\n           console.log(this.state.events);\r\n           var CBD = {};\r\n           for (let i = 0; i <data.people.length; i++){\r\n            var temp={}\r\n            for(let j=0; j<data.people.length; j++){\r\n                temp[data.people[j]]=0;\r\n            }            \r\n            CBD[data.people[i]]=temp;\r\n           }\r\n           this.setState({costBreakdown:CBD});\r\n           console.log(this.costBreakdown)  \r\n        //    for (let i = 0; i <data.people.length; i++){\r\n        //     var temp={}\r\n        //     for(let j=0; j<data.people.length; j++){\r\n        //         temp[data.people[j]]=0;\r\n        //     }\r\n        //     this.costBreakdown[data.people[i]]=temp\r\n        //    }\r\n        //    console.log(this.costBreakdown)\r\n\r\n\r\n\r\n        }, err => {});\r\n        }\r\n        else{\r\n            console.log(\"no event\")\r\n        }\r\n    }\r\n\r\n    printexpenses = ()=>{\r\n        console.log(this.state.expenses)\r\n    }\r\n\r\n\r\n    createExpenseList = () =>{\r\n        const list = this.state.expenses.map((expense) =>\r\n        <ExpenseCondensed expenseData={{expense:expense,loadExpenseCondensed:this.loadData.bind(this),loadEventCondensed:this.loadEvent.bind(this), IdReload_expense:this.Id, addToCostBreakdown: this.addToCostBreakdown.bind(this)}} />\r\n        );\r\n        return (list);\r\n    }\r\n\r\n    doFunction = () => {\r\n        //        var XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open(\"POST\", \"http://localhost:3004/expense\");\r\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        console.log(xhr.status);\r\n                        console.log(xhr.responseText);\r\n                    }\r\n                }\r\n                \r\n                var title = document.getElementById(\"title\").value;\r\n                var cost = document.getElementById(\"cost\").value;\r\n                var people = document.getElementById(\"peopleName\").value;\r\n                var paidBy = document.getElementById(\"paidBy\").value;\r\n                // var completed = document.getElementById(\"completed\").value;\r\n\r\n                var obj = {};\r\n                obj['eventId'] = this.Id;\r\n                obj['title'] = title;\r\n                obj['cost'] = cost;\r\n                obj['people'] = people.split(',');\r\n                obj['paidBy'] = paidBy;\r\n                // obj['completed'] = completed;\r\n                \r\n                var data = JSON.stringify(obj);\r\n                alert(data)\r\n                xhr.send(data);\r\n\r\n                xhr.onload = () => {\r\n                    if (xhr.readyState === xhr.DONE) {\r\n                      if (xhr.status === 200) {\r\n                        this.loadData(this.Id)\r\n                        \r\n                      }\r\n                    }\r\n                  };\r\n\r\n                }\r\n    \r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n    }\r\n\r\n    calcCostBreakdown = ()=>{\r\n        let CB = this.state.costBreakdown;\r\n        let expense_arr = this.state.expenses;\r\n        for (let i = 0; i < expense_arr.length; i++) {\r\n            let amount_pp = expense_arr[i].cost/expense_arr[i].people.length\r\n            console.log(\"amount\")\r\n            console.log(amount_pp)\r\n            for (let j = 0; j < expense_arr[i].people.length; j++){\r\n                console.log('peeeeepaahh')\r\n                console.log(expense_arr[i].people.length)\r\n                CB[expense_arr[i].people[j]][expense_arr[i].paidBy]+=amount_pp\r\n            }   \r\n        }\r\n        this.setState({costBreakdown:CB});\r\n        \r\n    }\r\n\r\n\r\n    addToCostBreakdown = (owedBy, owedTo, amount) => {\r\n        console.log(\"before state\"+this.state.costBreakdown[owedBy][owedTo])\r\n        var CBD = this.state.costBreakdown;\r\n        CBD[owedBy][owedTo]+=amount;\r\n        this.setState({costBreakdown:CBD});\r\n        console.log(\"after state\"+this.state.costBreakdown[owedBy][owedTo])\r\n        console.log(this.state.costBreakdown);\r\n\r\n    }\r\n    loadCBD =()=>{\r\n        return this.state.costBreakdown;\r\n    }\r\n              \r\n        \r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"expense\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"container-fluid App-main\">                           \r\n                        <div className=\"row\">\r\n                            <div className='col-sm-12 add-expense'>\r\n                                <div className=\"event-condensed\"> \r\n                                    {/* <div>{this.state.costBreakdown}</div>  */}\r\n                                    <EventCondensed eventData={{event_top:this.state.events,loadEventCondensed:this.loadEvent.bind(this), loadExpenseCondensed:this.loadData.bind(this), IdReload_event:this.Id, loadCBD: this.loadCBD.bind(this)}} />                      \r\n                                </div>   \r\n                                <div className='row add-expense'>\r\n                                    <div className='col-sm-12 col-md-1'>\r\n                                        <button type=\"submit\" className=\"btn btn-success mb-2 btn-sm btn-add-expense\"  data-toggle=\"modal\" data-target=\"#addExpense\">Add New Expense</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal\" id=\"addExpense\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addExpenseModal\" aria-hidden=\"true\">\r\n                                    <div className=\"modal-dialog\" role=\"document\">\r\n                                        <div className=\"modal-content\">\r\n                                        <div className=\"modal-header\">\r\n                                            {/* <h5 className=\"modal-title text-dark\" id=\"addExpenseModal\">Add New Expense</h5> */}\r\n                                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                                            <div className=\"form-group mx-sm-3 mb-2\">\r\n                                                <input type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Title\"></input>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"cost\" placeholder=\"Cost\"></input>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"peopleName\" placeholder=\"People\"></input>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"paidBy\" placeholder=\"Paid by\"></input>\r\n                                            </div>\r\n                                        </form>\r\n                                        </div>\r\n                                        <div class=\"modal-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.doFunction()} data-dismiss=\"modal\">Add Expense</button>                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                 \r\n                                <ul className=\"expense-condensed\">  \r\n                                    {this.createExpenseList()}\r\n                                </ul>\r\n                            </div>\r\n                        </div>              \r\n\r\n                    </div>\r\n                </header>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\n    \r\n\r\nexport default Expense;","D:\\Rahma\\Web\\splitwise-web\\src\\expense-condensed\\expense-condensed.js",[],[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\services\\http-services.js",[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\event-condensed\\event-condensed.js",[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\services\\http-service-event.js",[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\edit-expense\\edit-expense.js",[],[],"D:\\Rahma\\Web\\splitwise-web\\src\\edit-event\\edit-event.js",["74"],[],"D:\\Rahma\\Web\\splitwise-web\\src\\event-condensed\\event-people.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":24},{"ruleId":"75","severity":1,"message":"80","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":9,"column":8,"nodeType":"77","messageId":"78","endLine":9,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":65,"column":142,"nodeType":"85","messageId":"86","endLine":65,"endColumn":215},{"ruleId":"75","severity":1,"message":"87","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":33,"column":22,"nodeType":"90","messageId":"91","endLine":33,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":61,"column":22,"nodeType":"90","messageId":"91","endLine":61,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":65,"column":162,"nodeType":"90","messageId":"94","endLine":65,"endColumn":163},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ExpenseCondensed' is defined but never used.","'EventCondensed' is defined but never used.","'HttpService' is defined but never used.","'HttpServiceEvent' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat"]