{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rahma\\\\Web\\\\splitwise-web\\\\src\\\\event-condensed\\\\event-condensed.js\";\nimport React, { Component } from 'react';\nimport './event-condensed.css';\nimport EditEvent from '../edit-event/edit-event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EventCondensed extends Component {\n  constructor(props) {\n    super(props);\n    this.createEventPeople = inputval => {\n      const list = inputval.map(people => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning btn-eventPeople\",\n        children: people + \" x\"\n      }, people, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this));\n      return list;\n    };\n    this.createEventPeople = this.createEventPeople.bind(this);\n    // this.createEventPeopleList= this.createEventPeopleList.bind(this);\n  }\n\n  // createEventPeopleList = (inputlist) =>{\n  //     const list = inputlist.people.map((people) =>\n  //         <button type=\"button\" className=\"btn btn-warning btn-eventPeople\">{people+\" x\"}</button>\n  //     );\n  //     return (list);\n  // }\n\n  render() {\n    console.log(\"sartat\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-light event-title\",\n          children: [this.props.eventData.event_top.title, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary text-light btn-sm btn-editEvent\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#\" + JSON.stringify(this.props.eventData.event_top._id),\n            children: \"Edit Event Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 99\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light event-people\",\n          children: this.props.eventData.event_top.people\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-dark\",\n          children: this.createEventPeople()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditEvent, {\n        eventData: {\n          event: this.props.eventData.event_top,\n          loadEventCondensed: this.props.eventData.loadEventCondensed,\n          IdReload_event: this.props.eventData.IdReload_event\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default EventCondensed;","map":{"version":3,"names":["React","Component","EditEvent","EventCondensed","constructor","props","createEventPeople","inputval","list","map","people","bind","render","console","log","eventData","event_top","title","JSON","stringify","_id","event","loadEventCondensed","IdReload_event"],"sources":["D:/Rahma/Web/splitwise-web/src/event-condensed/event-condensed.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport './event-condensed.css';\r\nimport EditEvent from '../edit-event/edit-event';\r\n\r\nclass EventCondensed extends Component {\r\n    \r\n     constructor(props){\r\n        super(props);\r\n        this.createEventPeople= this.createEventPeople.bind(this);\r\n        // this.createEventPeopleList= this.createEventPeopleList.bind(this);\r\n                    \r\n    }\r\n\r\n    createEventPeople = (inputval) =>{\r\n        const list = inputval.map((people) =>\r\n        <button key={people} type=\"button\" className=\"btn btn-warning btn-eventPeople\">{people+\" x\"}</button>\r\n        );\r\n        return (list);\r\n    }\r\n\r\n    // createEventPeopleList = (inputlist) =>{\r\n    //     const list = inputlist.people.map((people) =>\r\n    //         <button type=\"button\" className=\"btn btn-warning btn-eventPeople\">{people+\" x\"}</button>\r\n    //     );\r\n    //     return (list);\r\n    // }\r\n\r\n    \r\n    render(){\r\n        console.log(\"sartat\")\r\n        return(\r\n            <div>\r\n                <li>                        \r\n                    <h1 className=\"text-light event-title\">{this.props.eventData.event_top.title} <button className=\"btn btn-primary text-light btn-sm btn-editEvent\" data-toggle=\"modal\" data-target={\"#\"+JSON.stringify(this.props.eventData.event_top._id)}>Edit Event Title</button> </h1>\r\n                    <p className=\"text-light event-people\">{this.props.eventData.event_top.people}</p>\r\n                    <div className=\"text-dark\">{this.createEventPeople()}</div>\r\n                    \r\n                </li>\r\n\r\n                <EditEvent eventData={{event:this.props.eventData.event_top, loadEventCondensed: this.props.eventData.loadEventCondensed, IdReload_event:this.props.eventData.IdReload_event}}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EventCondensed;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,uBAAuB;AAC9B,OAAOC,SAAS,MAAM,0BAA0B;AAAC;AAEjD,MAAMC,cAAc,SAASF,SAAS,CAAC;EAElCG,WAAW,CAACC,KAAK,EAAC;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,iBAAiB,GAAIC,QAAQ,IAAI;MAC7B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAEC,MAAM,iBACjC;QAAqB,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iCAAiC;QAAA,UAAEA,MAAM,GAAC;MAAI,GAA9EA,MAAM;QAAA;QAAA;QAAA;MAAA,QAAkF,CACpG;MACD,OAAQF,IAAI;IAChB,CAAC;IAVG,IAAI,CAACF,iBAAiB,GAAE,IAAI,CAACA,iBAAiB,CAACK,IAAI,CAAC,IAAI,CAAC;IACzD;EAEJ;;EASA;EACA;EACA;EACA;EACA;EACA;;EAGAC,MAAM,GAAE;IACJC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,oBACI;MAAA,wBACI;QAAA,wBACI;UAAI,SAAS,EAAC,wBAAwB;UAAA,WAAE,IAAI,CAACT,KAAK,CAACU,SAAS,CAACC,SAAS,CAACC,KAAK,oBAAE;YAAQ,SAAS,EAAC,iDAAiD;YAAC,eAAY,OAAO;YAAC,eAAa,GAAG,GAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACd,KAAK,CAACU,SAAS,CAACC,SAAS,CAACI,GAAG,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA0B;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eAC1Q;UAAG,SAAS,EAAC,yBAAyB;UAAA,UAAE,IAAI,CAACf,KAAK,CAACU,SAAS,CAACC,SAAS,CAACN;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eAClF;UAAK,SAAS,EAAC,WAAW;UAAA,UAAE,IAAI,CAACJ,iBAAiB;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1D,eAEL,QAAC,SAAS;QAAC,SAAS,EAAE;UAACe,KAAK,EAAC,IAAI,CAAChB,KAAK,CAACU,SAAS,CAACC,SAAS;UAAEM,kBAAkB,EAAE,IAAI,CAACjB,KAAK,CAACU,SAAS,CAACO,kBAAkB;UAAEC,cAAc,EAAC,IAAI,CAAClB,KAAK,CAACU,SAAS,CAACQ;QAAc;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9K;EAGd;AACJ;AAEA,eAAepB,cAAc"},"metadata":{},"sourceType":"module"}